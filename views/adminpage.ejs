<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="utf-8">
  <title>Dhyana Foundation</title>
  <link rel="stylesheet" href="/css/main.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.1/css/all.css" integrity="sha384-gfdkjb5BdAXd+lj+gudLWI+BXq4IuLW5IT+brZEZsLFm++aCMlF1V92rMkPaX4PP" crossorigin="anonymous">

</head>


<body>
  <nav class="navbar navbar-expand-lg" style="background-color:#f56c6d">
    <a class="navbar-brand" style="color:#ffffff">Dhyana Foundation</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <i style="font-size: 30px; color: white;" class="fas fa-bars"></i>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item active">
          <a class="nav-link" href="/" style="color:#ffffff">Database <span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/message" style="color:#ffffff">Message</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#" style="color:#ffffff">Form Corrections</a>
        </li>
        <li class="nav-item">
          <a href="/download" style="display: inline-block; border-radius: 5px; text-decoration: none;" class="bg-white my-2 p-2 my-sm-0" id="download">Download Data</a>
        </li>
        <li class="nav-item mx-2 mt-2">
            <select id="select-batch">
                <option value="34">34</option>
                <option value="35" selected>35</option>
                <option value="36">36</option>
                <option value="37">37</option>
                <option value="38">38</option>
                <option value="39">39</option>
                <option value="40">40</option>
                <option value="41">41</option>
                <option value="42">42</option>
            </select>
        </li>
      </ul>
      <form class="form-inline my-2 my-lg-0">
        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline my-2 my-sm-0" type="submit">Search</button>
      </form>
      </div>
    </nav>

    <style type="text/css" media="screen">
        [data-blocked="1"] {
            color: grey;
            background-color: lightgray;
        }
        .deleteStud {
            border: 0;
            padding: 11px;
            font-size: 14px;
            background-color: #c1c1c1;
            color: #ff0050;
            border-radius: 4px;
        }
        .deleteStud:active {
            background-color: #505050;
        }
    </style>

    <div class="students-list-container" style="padding: 10px 25px; overflow-x: scroll;">
    </div>
    <script>
        const batchSelect = document.querySelector('#select-batch')
        const studContainer = document.querySelector(".students-list-container")

        const tableRow = student => {
            return `
                <tr id="${student._id}" data-blocked="${+student.isBlocked}">
                    <td><button class="deleteStud" data-id="${student._id}"><i class="fas fa-trash" data-id="${student._id}"></i></button></td>
                    <td><input type="checkbox" data-blocked="${student.isBlocked}" data-id="${student._id}" class="disableStud" id="${student._id}"/></td>
                    <td>${student.code}</td>
                    <td>${student.name}</td>
                    <td>${student.batch}</td>
                    <td>${student.age}</td>
                    <td>${student.bloodGroup}</td>
                    <td>${student.city}</td>
                    <td>${student.phone}</td>
                    <td>${student.session}</td>
                    <td>${student.address}</td>
                    <td>${student.healthRecord}</td>
                    <td>${student.qualification}</td>
                    <td>${student.designation}</td>
                    <td>${student.email}</td>
                    <td>${student.introducerName}</td>
                    <td>${student.introducerPhone}</td>
                </tr>
            `
        }

        const emptyStud = batch => `<div style="margin-top: 10px; width:100%; display: flex; justify-content: center; padding: 9px 5px;">
            <style>
                .hello { color: #5a5a5a; }
            </style>
            <h2 class="hello">No students in batch ${batch}.</h2>
        </div>`

        const createTable = (students, batch) => {
            if (students.length <= 0) {
                studContainer.innerHTML = emptyStud(batch)
                return 
            }
            const tr = []
            const table = document.createElement('table')
            table.classList.add('table')
            const header = `
                <tr>
                    <th>Delete</th>
                    <th>Block</th>
                    <th>Code</th>
                    <th>Name</th>
                    <th>Batch</th>
                    <th>Age</th>
                    <th>Blood Group</th>
                    <th>City/Town</th>
                    <th>Phone No</th>
                    <th>Session</th>
                    <th>Address</th>
                    <th>Health Record</th>
                    <th>Qualification</th>
                    <th>Designation</th>
                    <th>Email</th>
                    <th>Introducer Name</th>
                    <th>Introducer Phone Number</th>
                </tr>
            `
            tr.push(header)
            for (let student of students) {
                tr.push(tableRow(student))
            }

            table.innerHTML = tr.join('\n')
            studContainer.innerHTML = ''
            studContainer.appendChild(table)

            const disableStud = document.querySelectorAll('.disableStud')
            const deleteStud = document.querySelectorAll('.deleteStud')

            disableStud.forEach(elmt => {
                if (elmt.getAttribute('data-blocked') === "true") {
                    elmt.checked = true
                } else {
                    elmt.checked = false
                }
            })

            disableStud.forEach(elmt => {  
                elmt.addEventListener('change', async e => {
                    const id = e.target.getAttribute('data-id')
                    const block = document.getElementById(id)
                    const isBlock = +!+block.getAttribute('data-blocked')
                    const val = { type: 'BLOCK', id }
                    const res = await fetch('/studedit', {
                        method: 'POST',
                        body: JSON.stringify(val),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    const data = await res.json()
                    console.log(data)
                    block.setAttribute('data-blocked', `${isBlock}`)
                })
            })

            deleteStud.forEach(elmt => 
                elmt.addEventListener('click', async e => {
                    const id = e.target.getAttribute('data-id')
                    const val = { type: 'DELETE', id }
                    const res = await fetch('/studedit', {
                        method: 'POST',
                        body: JSON.stringify(val),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    const data = await res.json()
                    if (data.msg === 'success') {
                        document.querySelector('tbody').removeChild(document.getElementById(id))
                    }
                })
            )
        }


        const fetchBatch = async batch => {
            const res = await fetch('/all', {
                method: 'POST',
                body: JSON.stringify({ batch }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            const data = await res.json()
            createTable(data.students, batch)
        }

        batchSelect.addEventListener('change', e => {
            fetchBatch(e.target.value)
        })

        fetchBatch("35")
    </script>
  </body>
</html>
